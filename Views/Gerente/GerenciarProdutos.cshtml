@model IEnumerable<InoFarm.Models.FrutaModel>

@{
    Layout = "~/Views/Shared/_LayoutGerente.cshtml";
}

<div class="buttons-container">
    <div class="container_lista">
        <!-- Menu -->
        <div class="menu">
            <a asp-controller="Gerente" asp-action="Dashboard" class="menu-item">
                <i class="fas fa-shopping-basket"></i>
                <p>Dashboard</p>
            </a>
            <a asp-controller="Gerente" asp-action="GerenciarProdutos" class="menu-item">
                <i class="fas fa-box"></i>
                <p>Produtos</p>
            </a>
            <a asp-controller="Gerente" asp-action="EntradaSaida" class="menu-item">
                <i class="fas fa-building"></i>
                <p>Registros de Entrada e Saída</p>
            </a>
        </div>

        <h1>Catálogo de Produtos</h1>
        <!-- Lista de produtos -->
        <div class="container">
            @foreach (var fruta in Model)
            {
                <div class="produto">
                    <img src="@Url.Content($"~/img/{fruta.Nome.ToLower()}.png")" alt="@fruta.Nome" class="imagem-produto" />
                    <div class="informacoes">
                        <h2>@fruta.Nome</h2>
                        <p>
                            Quantidade: 
                            <span class="quantidade">@fruta.Quantidade</span>
                            <input type="number" class="input-quantidade" value="@fruta.Quantidade" />
                        </p>
                        <p>
                            Preço: R$ <span class="preco">@fruta.Preco</span>
                            <input type="number" class="input-preco" value="@fruta.Preco" step="0.01" />
                        </p>
                        <div class="botoes">
                            <button class="botao editar" data-action="edit" data-id="@fruta.FrutaId">Editar</button>
                            <button class="botao salvar" data-id="@fruta.FrutaId">Salvar</button>
                            <button class="botao excluir" data-id="@fruta.FrutaId">Excluir</button>
                        </div>
                    </div>
                </div>
            }
        </div>
        <!-- Formulário para adicionar novo produto -->
        <div class="adicionar-produto">
            <h2>Adicionar Novo Produto</h2>
            <form id="addProdutoForm">
                <input type="text" name="Nome" placeholder="Nome" required />
                <input type="number" name="Quantidade" placeholder="Quantidade" required />
                <input type="number" name="Preco" placeholder="Preço" step="0.01" required />
                <button type="submit">Adicionar Produto</button>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Função genérica para realizar requisições
        async function handleAction(actionType, id = null, data = null) {
            const url = `/Gerente/GerenciarProdutos`;
            const response = await fetch(url, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ actionType, id, ...data })
            });
            const result = await response.json();
            alert(result.message);
            if (result.success) window.location.reload();
        }

        // Eventos de clique nos botões
        document.querySelectorAll(".editar").forEach((btn) =>
            btn.addEventListener("click", (e) => {
                const informacoes = e.target.closest(".informacoes");
                informacoes.classList.add("editando");
            })
        );

        document.querySelectorAll(".salvar").forEach((btn) =>
            btn.addEventListener("click", (e) => {
                const informacoes = e.target.closest(".informacoes");
                const frutaId = e.target.dataset.id;
                const data = {
                    Nome: informacoes.querySelector("h2").textContent.trim(),
                    Quantidade: informacoes.querySelector(".input-quantidade").value,
                    Preco: informacoes.querySelector(".input-preco").value
                };
                handleAction("edit", frutaId, data);
            })
        );

        document.querySelectorAll(".excluir").forEach((btn) =>
            btn.addEventListener("click", (e) => {
                const frutaId = e.target.dataset.id;
                if (confirm("Tem certeza que deseja excluir este produto?")) {
                    handleAction("delete", frutaId);
                }
            })
        );

        // Adicionar novo produto
        document.getElementById("addProdutoForm").addEventListener("submit", (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);
            const data = Object.fromEntries(formData.entries());
            handleAction("add", null, data);
        });
    });
</script>
