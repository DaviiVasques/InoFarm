// <auto-generated />
using System;
using InoFarm.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InoFarm.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241109213405_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InoFarm.Models.CarrinhoItemModel", b =>
                {
                    b.Property<int>("carrinhoItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("carrinhoItemId"));

                    b.Property<int>("IdCarrinho")
                        .HasColumnType("integer");

                    b.Property<int>("IdFruta")
                        .HasColumnType("integer");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("carrinhoItemId");

                    b.HasIndex("IdCarrinho");

                    b.HasIndex("IdFruta");

                    b.ToTable("CarrinhoItens");
                });

            modelBuilder.Entity("InoFarm.Models.CarrinhoModel", b =>
                {
                    b.Property<int>("CarrinhoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarrinhoId"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.HasKey("CarrinhoId");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Carrinhos");
                });

            modelBuilder.Entity("InoFarm.Models.FrutaModel", b =>
                {
                    b.Property<int>("FrutaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FrutaId"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("GerenteId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.Property<string>("formaVenda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FrutaId");

                    b.HasIndex("GerenteId");

                    b.ToTable("Frutas");
                });

            modelBuilder.Entity("InoFarm.Models.GerenteModel", b =>
                {
                    b.Property<int>("GerenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GerenteId"));

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("GerenteId");

                    b.ToTable("Gerentes");
                });

            modelBuilder.Entity("InoFarm.Models.UsuarioModel", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("GerenteId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UsuarioId");

                    b.HasIndex("GerenteId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("InoFarm.Models.CarrinhoItemModel", b =>
                {
                    b.HasOne("InoFarm.Models.CarrinhoModel", "Carrinho")
                        .WithMany("Itens")
                        .HasForeignKey("IdCarrinho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InoFarm.Models.FrutaModel", "Fruta")
                        .WithMany()
                        .HasForeignKey("IdFruta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carrinho");

                    b.Navigation("Fruta");
                });

            modelBuilder.Entity("InoFarm.Models.CarrinhoModel", b =>
                {
                    b.HasOne("InoFarm.Models.UsuarioModel", "Usuario")
                        .WithMany("Carrinhos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("InoFarm.Models.FrutaModel", b =>
                {
                    b.HasOne("InoFarm.Models.GerenteModel", "Gerente")
                        .WithMany("FrutasGerenciadas")
                        .HasForeignKey("GerenteId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Gerente");
                });

            modelBuilder.Entity("InoFarm.Models.UsuarioModel", b =>
                {
                    b.HasOne("InoFarm.Models.GerenteModel", "Gerente")
                        .WithMany("UsuariosGerenciados")
                        .HasForeignKey("GerenteId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Gerente");
                });

            modelBuilder.Entity("InoFarm.Models.CarrinhoModel", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("InoFarm.Models.GerenteModel", b =>
                {
                    b.Navigation("FrutasGerenciadas");

                    b.Navigation("UsuariosGerenciados");
                });

            modelBuilder.Entity("InoFarm.Models.UsuarioModel", b =>
                {
                    b.Navigation("Carrinhos");
                });
#pragma warning restore 612, 618
        }
    }
}
